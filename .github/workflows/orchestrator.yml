name: Orchestrator Management

on:
  issues:
    types: [opened, labeled, assigned]
  pull_request:
    types: [opened, ready_for_review, review_requested]
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:
    inputs:
      action:
        description: 'Orchestrator action'
        required: true
        type: choice
        options:
          - rebalance
          - health-check
          - spawn-agents
          - cleanup

jobs:
  route-new-issues:
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup orchestrator
        run: |
          npm install @octokit/rest
      
      - name: Analyze issue
        id: analyze
        run: |
          node .github/agents/orchestrator/analyze-issue.js \
            --issue-number=${{ github.event.issue.number }} \
            --issue-title="${{ github.event.issue.title }}" \
            --issue-body="${{ github.event.issue.body }}" \
            --issue-labels='${{ toJSON(github.event.issue.labels) }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Assign to agent
        run: |
          node .github/agents/orchestrator/assign-agent.js \
            --issue-number=${{ github.event.issue.number }} \
            --agent-type=${{ steps.analyze.outputs.agent_type }} \
            --priority=${{ steps.analyze.outputs.priority }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AGENT_POOL: ${{ secrets.AGENT_POOL }}
  
  manage-pull-requests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check for conflicts
        run: |
          node .github/agents/orchestrator/check-conflicts.js \
            --pr-number=${{ github.event.pull_request.number }} \
            --pr-branch=${{ github.event.pull_request.head.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Coordinate reviews
        if: github.event.action == 'ready_for_review'
        run: |
          node .github/agents/orchestrator/coordinate-reviews.js \
            --pr-number=${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  health-check:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'health-check')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check agent health
        id: health
        run: |
          node .github/agents/orchestrator/check-agent-health.js \
            --output=health-report.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DASHBOARD_API: ${{ secrets.DASHBOARD_URL }}
      
      - name: Rebalance workload
        if: steps.health.outputs.rebalance_needed == 'true'
        run: |
          node .github/agents/orchestrator/rebalance-agents.js \
            --health-report=health-report.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Spawn new agents
        if: steps.health.outputs.spawn_needed == 'true'
        run: |
          node .github/agents/orchestrator/spawn-agents.js \
            --count=${{ steps.health.outputs.spawn_count }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AGENT_CONFIG: ${{ secrets.AGENT_CONFIG }}
      
      - name: Update metrics
        if: always()
        run: |
          node .github/agents/orchestrator/update-metrics.js \
            --health-report=health-report.json
        env:
          DASHBOARD_API: ${{ secrets.DASHBOARD_URL }}
  
  cleanup-stale-resources:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'cleanup')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Clean up stale branches
        run: |
          node .github/agents/orchestrator/cleanup-branches.js \
            --days-old=30
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Archive old workspaces
        run: |
          node .github/agents/orchestrator/archive-workspaces.js \
            --days-old=7
        env:
          STORAGE_CONFIG: ${{ secrets.STORAGE_CONFIG }}